# @scf-option {"ignore": true}
on:
  push:
    branches:
      - main
      - develop
      - "feature/**"
      - "fix/**"
      - "release/**"
    paths-ignore:
      - "**/*.md"
      - .scafflater/**
  pull_request:
    branches:
      - main
    paths-ignore:
      - "**/*.md"
      - .scafflater/**
  workflow_dispatch:

name: Standard

env:
  app_name: pdd-template-javascript-serverless

jobs:
  ci:
    name: CI - Build and Test
    if: ${{ github.run_number != '1' }}
    runs-on: [self-hosted, core-shr]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version-file: .nvmrc
          cache: npm
          registry-url: https://npm.pkg.github.com/
      - name: Install Dependencies
        run: npm ci
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GHA_PACKAGES }}
      # Para o hackathon desabilitamos estes passos
      # - name: Lint
      #   run: npm run lint
      # - name: Test
      #   run: npm test
      # - name: Sonar Analysis
      #   uses: sonarsource/sonarcloud-github-action@master
      #   if: ${{ vars.SONAR_ENABLED == 'true' }}
      #   with:
      #     args: >
      #       -Dsonar.organization=gboticario
      #       -Dsonar.projectKey=${{ env.app_name }}
      #       -Dsonar.projectName=${{ env.app_name }}
      #       -Dsonar.language=js
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #     SONAR_TOKEN: ${{ secrets.SONARCLOUD_TOKEN }}
  ci_dependabot_automerge:
    name: CI - Dependabot Automerge
    if: ${{ github.event_name == 'pull_request' && github.actor == 'dependabot[bot]' }}
    runs-on: [self-hosted, core-shr]
    needs: [ci]
    env:
      GH_GB_TOKEN: ${{ secrets.DEPENDABOT_AUTO_MERGE }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Dependabot
        id: dependabot
        uses: dependabot/fetch-metadata@v1
        with:
          github-token: ${{ env.GH_GB_TOKEN }}
      - name: Auto Merge Condition
        id: auto-merge
        if: |
          (
            steps.dependabot.outputs.update-type == 'version-update:semver-patch'
          ) || (
            steps.dependabot.outputs.update-type == 'version-update:semver-minor'
          )
        run: echo "::notice ::auto-merge conditions satisfied"
      - name: Approve PR
        if: ${{ steps.auto-merge.conclusion == 'success' }}
        run: gh pr review ${{ github.event.number }} --approve
        env:
          GH_TOKEN: ${{ env.GH_GB_TOKEN }}
      - name: Comment PR LGTM
        if: ${{ steps.auto-merge.conclusion == 'success' }}
        run: gh pr comment ${{ github.event.number }} --body "LGTM"
        env:
          GH_TOKEN: ${{ env.GH_GB_TOKEN }}
      - name: PR Merge
        if: ${{ steps.auto-merge.conclusion == 'success' }}
        run: gh pr merge ${{ github.event.number }} --squash
        env:
          GH_TOKEN: ${{ env.GH_GB_TOKEN }}
